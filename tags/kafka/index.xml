<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Kafka on litsynp.log</title><link>https://litsynp.github.io/tags/kafka/</link><description>Recent content in Kafka on litsynp.log</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 07 Jan 2022 23:38:42 -0800</lastBuildDate><atom:link href="https://litsynp.github.io/tags/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>Bookmark</title><link>https://litsynp.github.io/posts/2022-01-07/</link><pubDate>Fri, 07 Jan 2022 23:38:42 -0800</pubDate><guid>https://litsynp.github.io/posts/2022-01-07/</guid><description>Today I Read Link https://blog.devgenius.io/redis-vs-kafka-vs-rabbitmq-e935ebbc7ec
What I Learned Means of communictaion between microservices: sync. and async. REST for sync. MQ for async. Considerations for choosing the right MQ: Broker scale: # messages / sec. Data persistency: the ability to recover messages Consumer capability: Capability for 1:1 or 1:N Different message brokers and their purposes RabbitMQ (AMQP) for complex routing Kafka for large amounts of data Redis for short-lived messages</description></item></channel></rss>