<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>python on litsynp</title><link>https://litsynp.github.io/tags/python/</link><description>Recent content in python on litsynp</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 10 Feb 2021 00:00:00 +0900</lastBuildDate><atom:link href="https://litsynp.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>[Python] super() 이용해서 기존 메소드 이용하기</title><link>https://litsynp.github.io/posts/2021-02-10/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0900</pubDate><guid>https://litsynp.github.io/posts/2021-02-10/</guid><description>Why use it? 프로젝트에서 Django REST Framework를 사용하고 있는데, serializer나 viewset을 사용할 때, 특히 ModelViewSet 을 override할 때 HTTP 메소드에 따른 함수를 수정하고 싶을 때가 있다.
그럴 때 특정 분기에 따라 override하기 전의 클래스 메소드를 사용하고 싶은 때가 있다.
예시는 다음과 같다.
# ViewSet 안의 메소드 def destroy(self, request, *args, **kwargs): user_id = int(self.kwargs.get(&amp;#39;pk&amp;#39;)) # 로그인한 사용자와 조회하려는 사용자의 ID가 일치한지 확인 if self.request.user.id == user_id: return super(UserViewSet, self).destroy(request, *args, **kwargs) else: response = { &amp;#39;detail&amp;#39;: &amp;#39;Delete function is not offered without authorization as the owner.</description></item></channel></rss>