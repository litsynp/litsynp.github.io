<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Message Queue on litsynp.log</title>
    <link>https://blog.litsynp.com/tags/message-queue/</link>
    <description>Recent content in Message Queue on litsynp.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Â© [litsynp](https://github.com/litsynp).</copyright>
    <lastBuildDate>Fri, 07 Jan 2022 23:38:42 -0800</lastBuildDate><atom:link href="https://blog.litsynp.com/tags/message-queue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TIR] Redis vs Kafka vs RabbitMQ</title>
      <link>https://blog.litsynp.com/posts/2022/01/07/tir-redis-vs-kafka-vs-rabbitmq/</link>
      <pubDate>Fri, 07 Jan 2022 23:38:42 -0800</pubDate>
      
      <guid>https://blog.litsynp.com/posts/2022/01/07/tir-redis-vs-kafka-vs-rabbitmq/</guid>
      <description>Today I Read Link https://blog.devgenius.io/redis-vs-kafka-vs-rabbitmq-e935ebbc7ec
What I Learned Means of communictaion between microservices: sync. and async. REST for sync. MQ for async. Considerations for choosing the right MQ: Broker scale: # messages / sec. Data persistency: the ability to recover messages Consumer capability: Capability for 1:1 or 1:N Different message brokers and their purposes RabbitMQ (AMQP) for complex routing Kafka for large amounts of data Redis for short-lived messages </description>
    </item>
    
  </channel>
</rss>
