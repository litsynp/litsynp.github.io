<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>today-i-read on litsynp.log</title>
    <link>https://blog.litsynp.com/categories/today-i-read/</link>
    <description>Recent content in today-i-read on litsynp.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© [litsynp](https://github.com/litsynp).</copyright>
    <lastBuildDate>Sat, 18 Jun 2022 15:46:22 +0900</lastBuildDate><atom:link href="https://blog.litsynp.com/categories/today-i-read/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis Keys and Values</title>
      <link>https://blog.litsynp.com/posts/2022/06/18/redis-keys-values/</link>
      <pubDate>Sat, 18 Jun 2022 15:46:22 +0900</pubDate>
      
      <guid>https://blog.litsynp.com/posts/2022/06/18/redis-keys-values/</guid>
      <description>Some notes about Redis keys and values from Redis docs.</description>
    </item>
    
    <item>
      <title>클린 코더 (The Clean Coder) 독서 - 1</title>
      <link>https://blog.litsynp.com/posts/2022/05/27/%ED%81%B4%EB%A6%B0-%EC%BD%94%EB%8D%94-the-clean-coder-%EB%8F%85%EC%84%9C-1/</link>
      <pubDate>Fri, 27 May 2022 23:02:28 +0900</pubDate>
      
      <guid>https://blog.litsynp.com/posts/2022/05/27/%ED%81%B4%EB%A6%B0-%EC%BD%94%EB%8D%94-the-clean-coder-%EB%8F%85%EC%84%9C-1/</guid>
      <description>클린 코더 (The Clean Coder) 독서 - 1 음악 들으면서 About 저자: “밥 아저씨” 로버트 C. 마틴
&amp;lt;Clean Code 클린 코드: 애자일 소프트웨어 장인 정신&amp;gt;의 저자이기도 함
표지 사진은 M1 성운 (게 성운)이고, 푸른 색의 밝은 점은 펄서이다.
책에서 다루는 내용 프로 소프트웨어 개발자의 마음가짐, 즉 소프트웨어 프로페셔널리즘에 관한 책이다.
책임지는 일은 무서운 일이다. 기술자라면 시스템과 프로젝트에 대해 관리자는 알기 힘든 깊은 지식을 알아야 한다. 그 지식을 가지고 행동으로 옮겨야 할 책임이 있다.</description>
    </item>
    
    <item>
      <title>[TIR] About web.xml</title>
      <link>https://blog.litsynp.com/posts/2022/01/21/tir-about-web.xml/</link>
      <pubDate>Fri, 21 Jan 2022 23:50:40 -0800</pubDate>
      
      <guid>https://blog.litsynp.com/posts/2022/01/21/tir-about-web.xml/</guid>
      <description>Today I Read Reference https://tlatmsrud.tistory.com/35
What I Learned web.xml이란 웹 애플리케이션의 설정파일이다. DD (Deployment Description, 배포 설명자) 라고 불린다. DD는 웹 애플리케이션 실행 시 메모리에 로드된다. web.xml이란, 웹 애플리케이션을 실행시킬 때 함께 올라가야 할 설정들을 정의해놓은 파일이다. 설정이란 web.xml은 크게 세 개의 설정을 한다. DispatcherServlet: 클라이언트의 요청을 전달 받아 처리 ContextLoaderListener: 웹 애플리케이션 컨텍스트 단위 설정을 로드 Filter: 클라이언트에서 온 요청을 DispatcherServlet이 받기 전 거치는 과정 처리 DispatcherServlet DispatcherServlet은 클라이언트의 요청을 전달받아 요청을 처리하는 객체이다.</description>
    </item>
    
    <item>
      <title>[TIR] Redis vs Kafka vs RabbitMQ</title>
      <link>https://blog.litsynp.com/posts/2022/01/07/tir-redis-vs-kafka-vs-rabbitmq/</link>
      <pubDate>Fri, 07 Jan 2022 23:38:42 -0800</pubDate>
      
      <guid>https://blog.litsynp.com/posts/2022/01/07/tir-redis-vs-kafka-vs-rabbitmq/</guid>
      <description>Today I Read Link https://blog.devgenius.io/redis-vs-kafka-vs-rabbitmq-e935ebbc7ec
What I Learned Means of communictaion between microservices: sync. and async. REST for sync. MQ for async. Considerations for choosing the right MQ: Broker scale: # messages / sec. Data persistency: the ability to recover messages Consumer capability: Capability for 1:1 or 1:N Different message brokers and their purposes RabbitMQ (AMQP) for complex routing Kafka for large amounts of data Redis for short-lived messages </description>
    </item>
    
  </channel>
</rss>
