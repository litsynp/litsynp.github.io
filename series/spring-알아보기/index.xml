<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring 알아보기 on litsynp.log</title><link>https://blog.litsynp.com/series/spring-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/</link><description>Recent content in Spring 알아보기 on litsynp.log</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© [litsynp](https://github.com/litsynp).</copyright><lastBuildDate>Sat, 04 Jun 2022 23:55:52 +0900</lastBuildDate><atom:link href="https://blog.litsynp.com/series/spring-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Batch와 주요 클래스 정리</title><link>https://blog.litsynp.com/posts/2022/06/04/spring-batch-summary/</link><pubDate>Sat, 04 Jun 2022 23:55:52 +0900</pubDate><guid>https://blog.litsynp.com/posts/2022/06/04/spring-batch-summary/</guid><description>배치 개발 시나리오 배치의 일반적인 시나리오는 읽기 - 처리 - 쓰기로 나누어진다.
배치 관련 객체 관계도 Job과 Step은 1:M, Step과 ItemReader, ItemProcessor, ItemWriter는 1:1 관계를 갖는다.
Job이라는 하나의 큰 일감(Job)에 여러 단계(Step)를 두고, 각 단계를 배치의 기본 흐름대로 구현한다.
배치 관련 클래스 정의 Job Job 은 배치 처리 과정을 하나의 단위로 만들어 표현한 객체이다. 전체 배치 처리에 있어 항상 최상단 계층에 있다. Job 객체는 여러 Step 인스턴스를 포함하는 컨테이너다.
Job 객체를 만드는 빌더는 여러 개가 있다.</description></item><item><title>Troubleshooting Spring Boot + Spring REST Docs + Kotlin + Gradle 7</title><link>https://blog.litsynp.com/posts/2022/04/08/troubleshooting-spring-boot-+-spring-rest-docs-+-kotlin-+-gradle-7/</link><pubDate>Fri, 08 Apr 2022 16:59:02 +0900</pubDate><guid>https://blog.litsynp.com/posts/2022/04/08/troubleshooting-spring-boot-+-spring-rest-docs-+-kotlin-+-gradle-7/</guid><description>Spring REST Docs 설정하기 Spring REST Docs를 설정하고 싶은데, Gradle 7, Kotlin, build.gradle.kts를 사용하는 예제를 찾아보기 어려웠다.
Kotlin을 사용하는 Spring Boot에서, 다음 환경으로 진행한다.
Gradle 7 Gradle Kotlin DSL을 사용하는 build.gradle.kts 사용 첫 번째 이슈 - index.adoc 생성 어찌저찌 테스트 코드를 작성하고 빌드하면 테스트 코드에 따라 build/generated-snippets 경로 안에 *.adoc 파일들이 생성된다.
하지만 index.html 파일이 생성되지 않았다.
예제를 대충 읽었기 때문에 놓친 부분이 있었는데, index.adoc 파일을 작성해야 했다.
Spring Boot | REST Docs 적용하기 ( + build failed 해결.</description></item><item><title>Spring Boot에서 Swagger UI 접속이 안되는 경우</title><link>https://blog.litsynp.com/posts/2021/09/05/spring-boot%EC%97%90%EC%84%9C-swagger-ui-%EC%A0%91%EC%86%8D%EC%9D%B4-%EC%95%88%EB%90%98%EB%8A%94-%EA%B2%BD%EC%9A%B0/</link><pubDate>Sun, 05 Sep 2021 01:00:00 +0900</pubDate><guid>https://blog.litsynp.com/posts/2021/09/05/spring-boot%EC%97%90%EC%84%9C-swagger-ui-%EC%A0%91%EC%86%8D%EC%9D%B4-%EC%95%88%EB%90%98%EB%8A%94-%EA%B2%BD%EC%9A%B0/</guid><description>문제 스프링 부트에서 Swagger2의 3.0.0 버전을 의존성에 추가했는데, /v2/api-docs는 접근이 되는데 /swagger-ui는 접근이 안됨.
원인 아마도 dependencies를 잘못 설정했을 확률이 높다.
해결법 Gradle 기준, build.gradle에서 다음과 같이 설정되어 있다면,
implementation group: &amp;#39;io.springfox&amp;#39;, name: &amp;#39;springfox-swagger-ui&amp;#39;, version: &amp;#39;3.0.0&amp;#39; implementation group: &amp;#39;io.springfox&amp;#39;, name: &amp;#39;springfox-swagger2&amp;#39;, version: &amp;#39;3.0.0&amp;#39; 다음과 같이 바꾼다.
implementation &amp;#34;io.springfox:springfox-boot-starter:3.0.0&amp;#34; 다시 빌드하고 /swagger-ui endpoint로 접속해보면 성공!👍</description></item><item><title>Getting Ambiguous @ExceptionHandler method mapped for XXXException</title><link>https://blog.litsynp.com/posts/2021/09/05/getting-ambiguous-@exceptionhandler-method-mapped-for-xxxexception/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0900</pubDate><guid>https://blog.litsynp.com/posts/2021/09/05/getting-ambiguous-@exceptionhandler-method-mapped-for-xxxexception/</guid><description>문제 스프링에서 @ControllerAdvice를 이용해 전역 exception handler를 직접 만들 때, @ExceptionHandler(XXXException.class)를 어노테이션으로 메소드에 달았을 때,
Getting Ambiguous @ExceptionHandler method mapped for XXXException 라는 오류가 뜨는 경우가 있다.
원인 스프링의 @ExceptionHandler에 이미 MethodArgumentNotValidException이 이미 구현이 되어있기 때문에 동일한 두 개의 핸들러가 존재하게 되기 때문에 발생한다.
해결법 @ExceptionHandler 어노테이션을 사용하는 대신, @Override 어노테이션을 이용해 해당 핸들러를 직접 오버라이드한다. (REF 참고)
REF Stack Overflow</description></item></channel></rss>